{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Yuta Okkotsu\\\\OneDrive\\\\Desktop\\\\System\\\\client\\\\src\\\\contexts\\\\SystemContext.js\",\n  _s = $RefreshSig$();\n// client/src/contexts/SystemContext.js\nimport React, { createContext, useState, useEffect, useContext } from 'react';\nimport api from '../services/api';\nimport { AuthContext } from './AuthContext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const SystemContext = /*#__PURE__*/createContext();\nexport const SystemProvider = ({\n  children\n}) => {\n  _s();\n  const {\n    user,\n    isAuthenticated\n  } = useContext(AuthContext);\n  const [stats, setStats] = useState(null);\n  const [quests, setQuests] = useState([]);\n  const [items, setItems] = useState([]);\n  const [notes, setNotes] = useState('');\n  const [loading, setLoading] = useState(true);\n  const [error, setError] = useState(null);\n\n  // Load user data when authenticated\n  useEffect(() => {\n    if (!isAuthenticated) {\n      setLoading(false);\n      return;\n    }\n    const loadUserData = async () => {\n      setLoading(true);\n      try {\n        // Load stats\n        const statsRes = await api.get('/stats');\n        setStats(statsRes.data);\n\n        // Load quests\n        const questsRes = await api.get('/quests');\n        setQuests(questsRes.data);\n\n        // Load items\n        const itemsRes = await api.get('/items');\n        setItems(itemsRes.data);\n\n        // Load notes\n        const notesRes = await api.get('/notes');\n        setNotes(notesRes.data.content);\n      } catch (err) {\n        setError('Error loading data');\n        console.error(err);\n      } finally {\n        setLoading(false);\n      }\n    };\n    loadUserData();\n  }, [isAuthenticated]);\n\n  // Stats methods\n  const saveStats = async updatedStats => {\n    try {\n      const res = await api.put('/stats', updatedStats);\n      setStats(res.data);\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Error saving stats');\n      return {\n        success: false,\n        error: 'Error saving stats'\n      };\n    }\n  };\n\n  // Quest methods\n  const addQuest = async quest => {\n    try {\n      const res = await api.post('/quests', quest);\n      setQuests([res.data, ...quests]);\n      return {\n        success: true,\n        quest: res.data\n      };\n    } catch (err) {\n      setError('Error adding quest');\n      return {\n        success: false,\n        error: 'Error adding quest'\n      };\n    }\n  };\n  const completeQuest = async questId => {\n    try {\n      const res = await api.put(`/quests/complete/${questId}`);\n\n      // Update quests list\n      setQuests(quests.map(quest => quest._id === questId ? {\n        ...quest,\n        completed: true\n      } : quest));\n\n      // Update user level and experience if needed\n      if (user) {\n        user.level = res.data.level;\n        user.experience = res.data.experience;\n      }\n      return {\n        success: true,\n        level: res.data.level,\n        experience: res.data.experience\n      };\n    } catch (err) {\n      setError('Error completing quest');\n      return {\n        success: false,\n        error: 'Error completing quest'\n      };\n    }\n  };\n  const deleteQuest = async questId => {\n    try {\n      await api.delete(`/quests/${questId}`);\n      setQuests(quests.filter(quest => quest._id !== questId));\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Error deleting quest');\n      return {\n        success: false,\n        error: 'Error deleting quest'\n      };\n    }\n  };\n\n  // Item methods\n  const addItem = async item => {\n    try {\n      const res = await api.post('/items', item);\n\n      // Check if item already exists\n      const existingItemIndex = items.findIndex(i => i._id === res.data._id);\n      if (existingItemIndex >= 0) {\n        // Update existing item\n        setItems(items.map((item, index) => index === existingItemIndex ? res.data : item));\n      } else {\n        // Add new item\n        setItems([...items, res.data]);\n      }\n      return {\n        success: true,\n        item: res.data\n      };\n    } catch (err) {\n      setError('Error adding item');\n      return {\n        success: false,\n        error: 'Error adding item'\n      };\n    }\n  };\n  const updateItemQuantity = async (itemId, quantity) => {\n    try {\n      const res = await api.put(`/items/${itemId}`, {\n        quantity\n      });\n      if (res.data.msg === 'Item removed') {\n        // Item was removed due to quantity <= 0\n        setItems(items.filter(item => item._id !== itemId));\n      } else {\n        // Update item quantity\n        setItems(items.map(item => item._id === itemId ? res.data : item));\n      }\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Error updating item');\n      return {\n        success: false,\n        error: 'Error updating item'\n      };\n    }\n  };\n  const deleteItem = async itemId => {\n    try {\n      await api.delete(`/items/${itemId}`);\n      setItems(items.filter(item => item._id !== itemId));\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Error deleting item');\n      return {\n        success: false,\n        error: 'Error deleting item'\n      };\n    }\n  };\n\n  // Notes methods\n  const saveNotes = async content => {\n    try {\n      const res = await api.put('/notes', {\n        content\n      });\n      setNotes(res.data.content);\n      return {\n        success: true\n      };\n    } catch (err) {\n      setError('Error saving notes');\n      return {\n        success: false,\n        error: 'Error saving notes'\n      };\n    }\n  };\n  const clearError = () => {\n    setError(null);\n  };\n  return /*#__PURE__*/_jsxDEV(SystemContext.Provider, {\n    value: {\n      stats,\n      quests,\n      items,\n      notes,\n      loading,\n      error,\n      saveStats,\n      addQuest,\n      completeQuest,\n      deleteQuest,\n      addItem,\n      updateItemQuantity,\n      deleteItem,\n      saveNotes,\n      clearError\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 189,\n    columnNumber: 5\n  }, this);\n};\n_s(SystemProvider, \"y9peIg3bXQ9abxVUNyggblb1zmA=\");\n_c = SystemProvider;\nvar _c;\n$RefreshReg$(_c, \"SystemProvider\");","map":{"version":3,"names":["React","createContext","useState","useEffect","useContext","api","AuthContext","jsxDEV","_jsxDEV","SystemContext","SystemProvider","children","_s","user","isAuthenticated","stats","setStats","quests","setQuests","items","setItems","notes","setNotes","loading","setLoading","error","setError","loadUserData","statsRes","get","data","questsRes","itemsRes","notesRes","content","err","console","saveStats","updatedStats","res","put","success","addQuest","quest","post","completeQuest","questId","map","_id","completed","level","experience","deleteQuest","delete","filter","addItem","item","existingItemIndex","findIndex","i","index","updateItemQuantity","itemId","quantity","msg","deleteItem","saveNotes","clearError","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/Yuta Okkotsu/OneDrive/Desktop/System/client/src/contexts/SystemContext.js"],"sourcesContent":["// client/src/contexts/SystemContext.js\r\nimport React, { createContext, useState, useEffect, useContext } from 'react';\r\nimport api from '../services/api';\r\nimport { AuthContext } from './AuthContext';\r\n\r\nexport const SystemContext = createContext();\r\n\r\nexport const SystemProvider = ({ children }) => {\r\n  const { user, isAuthenticated } = useContext(AuthContext);\r\n  \r\n  const [stats, setStats] = useState(null);\r\n  const [quests, setQuests] = useState([]);\r\n  const [items, setItems] = useState([]);\r\n  const [notes, setNotes] = useState('');\r\n  const [loading, setLoading] = useState(true);\r\n  const [error, setError] = useState(null);\r\n  \r\n  // Load user data when authenticated\r\n  useEffect(() => {\r\n    if (!isAuthenticated) {\r\n      setLoading(false);\r\n      return;\r\n    }\r\n    \r\n    const loadUserData = async () => {\r\n      setLoading(true);\r\n      try {\r\n        // Load stats\r\n        const statsRes = await api.get('/stats');\r\n        setStats(statsRes.data);\r\n        \r\n        // Load quests\r\n        const questsRes = await api.get('/quests');\r\n        setQuests(questsRes.data);\r\n        \r\n        // Load items\r\n        const itemsRes = await api.get('/items');\r\n        setItems(itemsRes.data);\r\n        \r\n        // Load notes\r\n        const notesRes = await api.get('/notes');\r\n        setNotes(notesRes.data.content);\r\n      } catch (err) {\r\n        setError('Error loading data');\r\n        console.error(err);\r\n      } finally {\r\n        setLoading(false);\r\n      }\r\n    };\r\n    \r\n    loadUserData();\r\n  }, [isAuthenticated]);\r\n  \r\n  // Stats methods\r\n  const saveStats = async (updatedStats) => {\r\n    try {\r\n      const res = await api.put('/stats', updatedStats);\r\n      setStats(res.data);\r\n      return { success: true };\r\n    } catch (err) {\r\n      setError('Error saving stats');\r\n      return { success: false, error: 'Error saving stats' };\r\n    }\r\n  };\r\n  \r\n  // Quest methods\r\n  const addQuest = async (quest) => {\r\n    try {\r\n      const res = await api.post('/quests', quest);\r\n      setQuests([res.data, ...quests]);\r\n      return { success: true, quest: res.data };\r\n    } catch (err) {\r\n      setError('Error adding quest');\r\n      return { success: false, error: 'Error adding quest' };\r\n    }\r\n  };\r\n  \r\n  const completeQuest = async (questId) => {\r\n    try {\r\n      const res = await api.put(`/quests/complete/${questId}`);\r\n      \r\n      // Update quests list\r\n      setQuests(quests.map(quest => \r\n        quest._id === questId ? { ...quest, completed: true } : quest\r\n      ));\r\n\r\n      // Update user level and experience if needed\r\n      if (user) {\r\n        user.level = res.data.level;\r\n        user.experience = res.data.experience;\r\n      }\r\n      \r\n      return { \r\n        success: true,\r\n        level: res.data.level,\r\n        experience: res.data.experience\r\n      };\r\n    } catch (err) {\r\n      setError('Error completing quest');\r\n      return { success: false, error: 'Error completing quest' };\r\n    }\r\n  };\r\n  \r\n  const deleteQuest = async (questId) => {\r\n    try {\r\n      await api.delete(`/quests/${questId}`);\r\n      setQuests(quests.filter(quest => quest._id !== questId));\r\n      return { success: true };\r\n    } catch (err) {\r\n      setError('Error deleting quest');\r\n      return { success: false, error: 'Error deleting quest' };\r\n    }\r\n  };\r\n  \r\n  // Item methods\r\n  const addItem = async (item) => {\r\n    try {\r\n      const res = await api.post('/items', item);\r\n      \r\n      // Check if item already exists\r\n      const existingItemIndex = items.findIndex(i => i._id === res.data._id);\r\n      \r\n      if (existingItemIndex >= 0) {\r\n        // Update existing item\r\n        setItems(items.map((item, index) => \r\n          index === existingItemIndex ? res.data : item\r\n        ));\r\n      } else {\r\n        // Add new item\r\n        setItems([...items, res.data]);\r\n      }\r\n      \r\n      return { success: true, item: res.data };\r\n    } catch (err) {\r\n      setError('Error adding item');\r\n      return { success: false, error: 'Error adding item' };\r\n    }\r\n  };\r\n  \r\n  const updateItemQuantity = async (itemId, quantity) => {\r\n    try {\r\n      const res = await api.put(`/items/${itemId}`, { quantity });\r\n      \r\n      if (res.data.msg === 'Item removed') {\r\n        // Item was removed due to quantity <= 0\r\n        setItems(items.filter(item => item._id !== itemId));\r\n      } else {\r\n        // Update item quantity\r\n        setItems(items.map(item => \r\n          item._id === itemId ? res.data : item\r\n        ));\r\n      }\r\n      \r\n      return { success: true };\r\n    } catch (err) {\r\n      setError('Error updating item');\r\n      return { success: false, error: 'Error updating item' };\r\n    }\r\n  };\r\n  \r\n  const deleteItem = async (itemId) => {\r\n    try {\r\n      await api.delete(`/items/${itemId}`);\r\n      setItems(items.filter(item => item._id !== itemId));\r\n      return { success: true };\r\n    } catch (err) {\r\n      setError('Error deleting item');\r\n      return { success: false, error: 'Error deleting item' };\r\n    }\r\n  };\r\n  \r\n  // Notes methods\r\n  const saveNotes = async (content) => {\r\n    try {\r\n      const res = await api.put('/notes', { content });\r\n      setNotes(res.data.content);\r\n      return { success: true };\r\n    } catch (err) {\r\n      setError('Error saving notes');\r\n      return { success: false, error: 'Error saving notes' };\r\n    }\r\n  };\r\n  \r\n  const clearError = () => {\r\n    setError(null);\r\n  };\r\n  \r\n  return (\r\n    <SystemContext.Provider\r\n      value={{\r\n        stats,\r\n        quests,\r\n        items,\r\n        notes,\r\n        loading,\r\n        error,\r\n        saveStats,\r\n        addQuest,\r\n        completeQuest,\r\n        deleteQuest,\r\n        addItem,\r\n        updateItemQuantity,\r\n        deleteItem,\r\n        saveNotes,\r\n        clearError\r\n      }}\r\n    >\r\n      {children}\r\n    </SystemContext.Provider>\r\n  );\r\n};"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}