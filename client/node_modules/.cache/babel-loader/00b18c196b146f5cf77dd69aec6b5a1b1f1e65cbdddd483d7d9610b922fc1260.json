{"ast":null,"code":"// src/utils/formatter.js\n// Helper functions for formatting data\n\n/**\r\n * Format experience percentage\r\n * @param {number} experience - Current experience points\r\n * @param {number} level - Current level\r\n * @returns {number} - Percentage of progress to next level (0-100)\r\n */\nexport const formatExpPercentage = (experience, level) => {\n  const requiredXP = level * 1000;\n  return Math.min(Math.floor(experience / requiredXP * 100), 100);\n};\n\n/**\r\n * Format experience display text\r\n * @param {number} experience - Current experience points\r\n * @param {number} level - Current level\r\n * @returns {string} - Formatted text (e.g. \"350/1000 XP\")\r\n */\nexport const formatExpText = (experience, level) => {\n  const requiredXP = level * 1000;\n  return `${experience}/${requiredXP} XP`;\n};\n\n/**\r\n * Generate share URL\r\n * @param {string} userId - User ID\r\n * @param {number} level - User level\r\n * @param {object} stats - User stats object\r\n * @returns {string} - Share URL\r\n */\nexport const generateShareUrl = (userId, level, stats) => {\n  if (!stats) return '';\n  const randomId = Math.random().toString(36).substring(2, 8);\n  const statValues = [stats.strength, stats.agility, stats.intelligence, stats.endurance, stats.vitality, stats.perception, stats.willpower, stats.charisma].join(',');\n  return `${window.location.origin}/share/${randomId}?l=${level}&s=${statValues}`;\n};","map":{"version":3,"names":["formatExpPercentage","experience","level","requiredXP","Math","min","floor","formatExpText","generateShareUrl","userId","stats","randomId","random","toString","substring","statValues","strength","agility","intelligence","endurance","vitality","perception","willpower","charisma","join","window","location","origin"],"sources":["C:/Users/Yuta Okkotsu/OneDrive/Desktop/System/github/solo-levelling-system/client/src/utils/formatter.js"],"sourcesContent":["// src/utils/formatter.js\r\n// Helper functions for formatting data\r\n\r\n/**\r\n * Format experience percentage\r\n * @param {number} experience - Current experience points\r\n * @param {number} level - Current level\r\n * @returns {number} - Percentage of progress to next level (0-100)\r\n */\r\nexport const formatExpPercentage = (experience, level) => {\r\n    const requiredXP = level * 1000;\r\n    return Math.min(Math.floor((experience / requiredXP) * 100), 100);\r\n  };\r\n  \r\n  /**\r\n   * Format experience display text\r\n   * @param {number} experience - Current experience points\r\n   * @param {number} level - Current level\r\n   * @returns {string} - Formatted text (e.g. \"350/1000 XP\")\r\n   */\r\n  export const formatExpText = (experience, level) => {\r\n    const requiredXP = level * 1000;\r\n    return `${experience}/${requiredXP} XP`;\r\n  };\r\n  \r\n  /**\r\n   * Generate share URL\r\n   * @param {string} userId - User ID\r\n   * @param {number} level - User level\r\n   * @param {object} stats - User stats object\r\n   * @returns {string} - Share URL\r\n   */\r\n  export const generateShareUrl = (userId, level, stats) => {\r\n    if (!stats) return '';\r\n    \r\n    const randomId = Math.random().toString(36).substring(2, 8);\r\n    const statValues = [\r\n      stats.strength,\r\n      stats.agility,\r\n      stats.intelligence,\r\n      stats.endurance,\r\n      stats.vitality,\r\n      stats.perception,\r\n      stats.willpower,\r\n      stats.charisma\r\n    ].join(',');\r\n    \r\n    return `${window.location.origin}/share/${randomId}?l=${level}&s=${statValues}`;\r\n  };"],"mappings":"AAAA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA,OAAO,MAAMA,mBAAmB,GAAGA,CAACC,UAAU,EAAEC,KAAK,KAAK;EACtD,MAAMC,UAAU,GAAGD,KAAK,GAAG,IAAI;EAC/B,OAAOE,IAAI,CAACC,GAAG,CAACD,IAAI,CAACE,KAAK,CAAEL,UAAU,GAAGE,UAAU,GAAI,GAAG,CAAC,EAAE,GAAG,CAAC;AACnE,CAAC;;AAED;AACF;AACA;AACA;AACA;AACA;AACE,OAAO,MAAMI,aAAa,GAAGA,CAACN,UAAU,EAAEC,KAAK,KAAK;EAClD,MAAMC,UAAU,GAAGD,KAAK,GAAG,IAAI;EAC/B,OAAO,GAAGD,UAAU,IAAIE,UAAU,KAAK;AACzC,CAAC;;AAED;AACF;AACA;AACA;AACA;AACA;AACA;AACE,OAAO,MAAMK,gBAAgB,GAAGA,CAACC,MAAM,EAAEP,KAAK,EAAEQ,KAAK,KAAK;EACxD,IAAI,CAACA,KAAK,EAAE,OAAO,EAAE;EAErB,MAAMC,QAAQ,GAAGP,IAAI,CAACQ,MAAM,CAAC,CAAC,CAACC,QAAQ,CAAC,EAAE,CAAC,CAACC,SAAS,CAAC,CAAC,EAAE,CAAC,CAAC;EAC3D,MAAMC,UAAU,GAAG,CACjBL,KAAK,CAACM,QAAQ,EACdN,KAAK,CAACO,OAAO,EACbP,KAAK,CAACQ,YAAY,EAClBR,KAAK,CAACS,SAAS,EACfT,KAAK,CAACU,QAAQ,EACdV,KAAK,CAACW,UAAU,EAChBX,KAAK,CAACY,SAAS,EACfZ,KAAK,CAACa,QAAQ,CACf,CAACC,IAAI,CAAC,GAAG,CAAC;EAEX,OAAO,GAAGC,MAAM,CAACC,QAAQ,CAACC,MAAM,UAAUhB,QAAQ,MAAMT,KAAK,MAAMa,UAAU,EAAE;AACjF,CAAC","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}